swagger: '2.0'
info:
  version: 0.0.1
  title: VIS-Labor Webshop API
  description: API-Beschreibung der Webshop-Implementierung im Rahmen des VIS-Labors, November 2015.
  contact:
    name: Sebastian Schork & Vitali Dettling
    
host: hs-karlsruhe.de

basePath: /api
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
  
# --------------------- Account REST API Definition -------------------
paths:
  '/account/{user}/{pass}':
    get:
      description: 'handles the login of a given user account'
      operationId: loginAccount
      produces:
        - application/json
        - application/xml
        - text/xml
        - text/html
      parameters:
        - name: user
          in: path
          description: User name
          required: true
          type: string
        - name: pass
          in: path
          description: User's password
          required: true
          type: string
      responses:
        '200':
          description: 'login procedure successfull'
        default:
          description: 'unexpected error'
          schema:
            $ref: '#/definitions/errorModel'

    delete:
      description: 'deletes an account permanently'
      operationId: deleteAccount
      parameters:
        - name: user
          in: path
          description: 'user name of the account to be deleted'
          required: true
          type: string
        - name: pass
          in: path
          description: 'user password of the account to be deleted'
          required: true
          type: string
      responses:
        '200':
          description: 'account deleted'
        default:
          description: 'unexpected error'
          schema:
            $ref: '#/definitions/errorModel'
        
    put:
      description: creates a new account
      operationId: createAccount
      parameters:
        - name: user
          in: path
          description: user name of the new account
          required: true
          type: string
        - name: pass
          in: path
          description: user' password of the new account
          required: true
          type: string
      responses:
        '200':
          description: account successfully created
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
          
# --------------------- Category REST API Definition -------------------  

  '/category/{id}':
    post:
      description: 'the catory will be called as soon as the administrator wants to add a new category'  
      parameters:
        - name: id
          in: path
          description: 'new ID of the new category'
          required: true
          type: string
      tags:
        - Category
      responses:
        '200':
          description: 'new category had been added'
          #schema:
           # type: string
        default:
          description: 'Unexpected error'

    delete:
      description: 'the catory will be called as soon as the administrator wants to delete an existing category'
      parameters:
        - name: id
          in: path
          description: 'ID of the to delete category'
          required: true
          type: string
      responses:
        '200':
         description: 'category was deleted'
        default:
          description: 'Unexpected error'
          
 # --------------------- Product REST API Definition -------------------

  '/product/{id}':
    get:
      description: 'Return the current product information.'
      operationId: getProduct
      produces:
        - application/json
        - application/xml
        - text/xml
        - text/html
      parameters:
        - name: id
          in: path
          description: 'id of the product.'
          required: true
          type: string
      responses:
        '200':
          description: return product
          schema:
            $ref: '#/definitions/responses'
        default:
          description: 'unexpected error'
          schema:
            $ref: '#/definitions/errorModel'

  '/product/{id}/{price}/{info}':
    post:
      description: 'insert a new product.'
      operationId: insertProduct
      parameters:
        - name: id
          in: path
          description: 'id of the product.'
          required: true
          type: string
        - name: price
          in: path
          description: 'id of the product.'
          required: true
          type: string
        - name: info
          in: path
          description: 'description of the product.'
          required: false
          type: string
      responses:
        '200':
          description: 'return product'
        default:
          description: 'unexpected error'
          schema:
            $ref: '#/definitions/errorModel' 

    delete:
      description: 'delete a new product.'
      operationId: deleteProduct
      parameters:
        - name: id
          in: path
          description: 'id of the product.'
          required: true
          type: string
      responses:
        '200':
          description: 'product deleted'
        default:
          description: 'unexpected error'
          schema:
            $ref: '#/definitions/errorModel'            

 # --------------------- Response Message REST API Definition -------------------               
  definitions:

    errorModel:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
          
    responses:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
  
    